name: Deploy to production

on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::269172689858:role/GitHubActions-ECRPushRole
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Load secrets and save to app.env
        # update db_source value in aws secret manager if db instance is changed, otherwise start.sh will not work
        run: |
          set -eo pipefail
          echo "Fetching secret 'simple_bank' from AWS Secrets Manager..."
          aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text > secret.json
          echo "--- Raw secret from AWS ---"
          cat secret.json
          echo "---------------------------"

          echo "Processing secret with jq..."
          jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' secret.json > app.env

          echo "--- Final contents of app.env ---"
          cat app.env
          echo "---------------------------------"

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
